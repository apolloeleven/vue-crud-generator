<template>
  <div class="{{mainDivClass}}">

    <h1 v-if="{{objectVariableName}}.uuid">{{$t('Update')}} {{$t('{{componentNameVisual}}')}}</h1>
    <h1 v-if="!{{objectVariableName}}.uuid">{{$t('Create')}} {{$t('{{componentNameVisual}}')}}</h1>

    <b-form @submit.prevent="onSubmit">
      {{inputFields}}
      {{translatableInputFields}}
      <b-button type="submit" variant="primary" class="mr-1">{{$t('Submit')}}</b-button>
      <b-button type="reset" variant="danger">{{$t('Reset')}}</b-button>

    </b-form>

  </div>
</template>

<script>

  import {{serviceName}} from './{{serviceName}}';
  import i18n from './../../services/i18n';

  export default {
    name: "{{componentName}}Form",
    data: () => {
      return {
        locales: [],
        fields: [],
        translatableFields: [],
        {{objectVariableName}}: {}
      }
    },
    methods: {
      onSubmit() {
        if (this.{{objectVariableName}}.uuid) {
          {{serviceName}}.update{{componentName}}(this.{{objectVariableName}}.uuid, this.{{objectVariableName}})
            .then(response => {
              this.$router.push({path: '/{{mainUrl}}'})
            }, error => {
              // TODO throw error
            });
        } else {
          {{serviceName}}.create{{componentName}}(this.{{objectVariableName}})
            .then(response => {
              this.$router.push({path: '/{{mainUrl}}'})
            }, error => {
              // TODO throw error
            });
        }
      },
      initFields() {
        let generalFields = {{serviceName}}.getGeneralFields();
        this.translatableFields = generalFields.translatableFields;
      }
    },
    beforeMount() {
      this.initFields();
      this.locales = i18n.getAvailableLocales();
      i18n.initTranslatableFields(this.{{objectVariableName}}, this.translatableFields);

      if (this.$route.params.id) {
        {{serviceName}}.get{{componentName}}(this.$route.params.id)
          .then(response => {
            this.{{objectVariableName}} = response.data;
          }, error => {
            //TODO throw error
          });
      }
    }
  }
</script>

<style lang="scss">
  .{{mainDivClass}} {
    form {
      background-color: #fafafa;
      padding: 15px 20px;
    }
  }
</style>
